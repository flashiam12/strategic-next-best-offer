apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper:7.1.0
    init: confluentinc/confluent-init-container:2.3.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  # tls:
  #   autoGeneratedCerts: true
  # podTemplate:
  #   podSecurityContext:
  #     fsGroup: 1000
  #     runAsUser: 1000
  #     runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.1.0
    init: confluentinc/confluent-init-container:2.3.0
  dataVolumeCapacity: 10Gi
  metricReporter:
    enabled: true
  # podTemplate:
  #   podSecurityContext:
  #     fsGroup: 1000
  #     runAsUser: 1000
  #     runAsNonRoot: true
  # dependencies:
  #   zookeeper:
  #     endpoint: zookeeper.confluent.svc.cluster.local:2182
  #     tls:
  #       enabled: true
  metricReporter:
    enabled: true
  listeners:
    external:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: hsbc-ops.selabs.net
          bootstrapPrefix: cp-hsbc-ops
          brokerPrefix: cp-hsbc-src
          annotations:
            service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
            service.beta.kubernetes.io/aws-load-balancer-type: external
            service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
            alb.ingress.kubernetes.io/tags: Environment=ops, Kind=strategic, Terraform=True
    internal:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
  services:
    kafkaRest:
      authentication:
        type: basic
        basic:
          secretRef: credential
          roles:
            - Administrators
  passwordEncoder:
    secretRef: password-encoder-secret
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  dependencies:
    schemaRegistry:
      url: http://schemaregistry.confluent.svc.cluster.local:8081
    kafka:
      bootstrapEndpoint: kafka-0.kafka.confluent.svc.cluster.local:9092
      authentication:
        type: plain                
        jaasConfig:               
          secretRef: credential
  image:
    application: confluentinc/cp-kafka-rest:7.1.0
    init: confluentinc/confluent-init-container:2.3.0
  replicas: 1
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  externalAccess:
    type: nodePort
    nodePort:
      host: cp-restproxy.hsbc-ops.selabs.net
      nodePortOffset: 30600
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka-0.kafka.confluent.svc.cluster.local:9092
      authentication:
        type: plain                
        jaasConfig:               
          secretRef: credential
  image:
    application: confluentinc/cp-schema-registry:7.1.0
    init: confluentinc/confluent-init-container:2.3.0
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  externalAccess:
    type: nodePort
    nodePort:
      host: cp-schema-registry.hsbc-ops.selabs.net
      nodePortOffset: 30500
  tls:
    autoGeneratedCerts: true